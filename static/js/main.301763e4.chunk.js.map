{"version":3,"sources":["actions/UserActions.js","reducers/user.js","actions/PageActions.js","reducers/page.js","reducers/index.js","store/configureStore.js","components/user/User.js","containers/UserContainer.js","components/page/Page.js","containers/PageContainer.js","components/app/App.js","serviceWorker.js","index.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","initialState","name","isFetching","error","GET_PHOTOS_REQUEST","GET_PHOTOS_SUCCESS","GET_PHOTOS_ERROR","getPhotos","year","dispatch","type","payload","getAllPhotos","offset","arguments","length","undefined","acc","VK","Api","call","extended","count","v","r","response","photos","concat","Object","toConsumableArray","items","sortPhotos","truePhotos","filter","item","Date","date","getFullYear","sort","a","b","likes","filterPhotos","rootReducer","combineReducers","page","state","action","objectSpread","user","store","createStore","applyMiddleware","thunk","logger","User","_this$props","this","props","react_default","createElement","className","onClick","handleLogin","React","Component","UserContainer","User_User","mapStateToProps","mapDispatchToProps","Auth","login","session","username","first_name","connect","Page","onBtnClick","e","val","currentTarget","innerText","_this","renderPhotos","map","photo","key","id","src","sizes","url","alt","renderButtons","curYear","index","_this$props2","PageContainer","Page_Page","App","containers_UserContainer","containers_PageContainer","Boolean","window","location","hostname","match","ReactDOM","render","es","components_app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.301763e4.chunk.js","sourcesContent":["export const LOGIN_REQUEST = 'LOGIN_REQUEST'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\n\r\nexport function handleLogin() {\r\n  return function(dispatch) {\r\n    dispatch({\r\n      type: LOGIN_REQUEST,\r\n    })\r\n\r\n    //eslint-disable-next-line no-undef\r\n    VK.Auth.login(r => {\r\n      if (r.session) {\r\n        let username = r.session.user.first_name\r\n\r\n        dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          payload: username,\r\n        })\r\n      } else {\r\n        dispatch({\r\n          type: LOGIN_FAIL,\r\n          error: true,\r\n          payload: 'Ошибка авторизации',\r\n        })\r\n      }\r\n    }, 4) // запрос прав на доступ к photo\r\n  }\r\n}\r\n","import {\r\n  LOGIN_FAIL,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n} from '../actions/UserActions'\r\n\r\nexport const initialState = {\r\n  name: '',\r\n  isFetching: false,\r\n  error: '',\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      return { ...state, isFetching: true, error: '' }\r\n    case LOGIN_SUCCESS:\r\n      return { ...state, isFetching: false, name: action.payload }\r\n    case LOGIN_FAIL:\r\n      return { ...state, isFetching: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_PHOTOS_REQUEST = 'GET_PHOTOS_REQUEST'\r\nexport const GET_PHOTOS_SUCCESS = 'GET_PHOTOS_SUCCESS'\r\nexport const GET_PHOTOS_ERROR = 'GET_PHOTOS_ERROR'\r\n\r\nexport function getPhotos(year) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GET_PHOTOS_REQUEST,\r\n      payload: year,\r\n    })\r\n\r\n    getAllPhotos(dispatch, year)\r\n  }\r\n}\r\n\r\nfunction getAllPhotos(dispatch, year, offset = 0, acc = []) {\r\n  //eslint-disable-next-line no-undef\r\n  VK.Api.call(\r\n    'photos.getAll',\r\n    { extended: 1, count: 200, offset: offset, v: '5.80' },\r\n    r => {\r\n      if (!r.response) {\r\n        dispatch({\r\n          type: GET_PHOTOS_ERROR,\r\n          error: true,\r\n          payload: 'Ошибка получения фотографий',\r\n        })\r\n\r\n        return false\r\n      }\r\n\r\n      const photos = [...acc, ...r.response.items]\r\n      const count = r.response.count\r\n\r\n      if (count === offset) {\r\n        return getAllPhotos(dispatch, year, offset + 200, photos)\r\n      }\r\n\r\n      const sortPhotos = filterPhotos(photos, year)\r\n\r\n      dispatch({\r\n        type: GET_PHOTOS_SUCCESS,\r\n        payload: sortPhotos,\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nfunction filterPhotos(photos, year) {\r\n  const truePhotos = photos.filter(\r\n    item => year === new Date(item.date * 1000).getFullYear()\r\n  )\r\n\r\n  truePhotos.sort((a, b) => b.likes.count - a.likes.count)\r\n\r\n  return truePhotos\r\n}\r\n","import {\r\n  GET_PHOTOS_REQUEST,\r\n  GET_PHOTOS_SUCCESS,\r\n  GET_PHOTOS_ERROR,\r\n} from '../actions/PageActions'\r\n\r\nconst initialState = {\r\n  year: 0,\r\n  photos: [],\r\n  isFetching: false,\r\n  error: '',\r\n}\r\n\r\nexport function pageReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PHOTOS_REQUEST:\r\n      return { ...state, year: action.payload, isFetching: true, error: '' }\r\n\r\n    case GET_PHOTOS_SUCCESS:\r\n      return { ...state, photos: action.payload, isFetching: false }\r\n\r\n    case GET_PHOTOS_ERROR:\r\n      return { ...state, photos: [], isFetching: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { userReducer } from './user'\r\nimport { pageReducer } from './page'\r\n\r\nexport const rootReducer = combineReducers({\r\n  page: pageReducer,\r\n  user: userReducer,\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { rootReducer } from '../reducers/index'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger))\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './user.scss'\r\n\r\nexport default class User extends React.Component {\r\n  render() {\r\n    const { name, error, isFetching } = this.props\r\n\r\n    if (error) {\r\n      return <p className=\"user\">{error}</p>\r\n    }\r\n\r\n    if (isFetching) {\r\n      return <p className=\"user\">Загружаю...</p>\r\n    }\r\n\r\n    if (name) {\r\n      return <p className=\"user\">Пользователь: {name}</p>\r\n    } else {\r\n      return (\r\n        <button className=\"btn-login\" onClick={this.props.handleLogin}>\r\n          Войти\r\n        </button>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nUser.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  isFetching: PropTypes.bool.isRequired,\r\n  handleLogin: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleLogin } from '../actions/UserActions'\r\nimport User from '../components/user/User'\r\n\r\nclass UserContainer extends React.Component {\r\n  static mapStateToProps = store => {\r\n    return {\r\n      user: store.user,\r\n    }\r\n  }\r\n\r\n  static mapDispatchToProps = dispatch => {\r\n    return {\r\n      handleLogin: () => dispatch(handleLogin()),\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { user, handleLogin } = this.props\r\n    return (\r\n      <User\r\n        handleLogin={handleLogin}\r\n        name={user.name}\r\n        isFetching={user.isFetching}\r\n        error={user.error}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  UserContainer.mapStateToProps,\r\n  UserContainer.mapDispatchToProps\r\n)(UserContainer)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './page.scss'\r\n\r\nexport default class Page extends React.Component {\r\n  onBtnClick = e => {\r\n    const val = +e.currentTarget.innerText\r\n\r\n    this.props.getPhotos(val)\r\n  }\r\n\r\n  renderPhotos = () => {\r\n    const { photos, isFetching, error } = this.props\r\n\r\n    if (error) {\r\n      return <p className=\"error\">{error}</p>\r\n    }\r\n\r\n    if (isFetching) {\r\n      return <p className=\"load\">Загрузка...</p>\r\n    }\r\n\r\n    return photos.map(photo => (\r\n      <div className=\"photo\" key={photo.id}>\r\n        <img className=\"photo__img\" src={photo.sizes[3].url} alt=\"\" />\r\n        <p className=\"photo__content\">{photo.likes.count} ❤</p>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  renderButtons = () => {\r\n    const curYear = this.props.year\r\n    const years = [2018, 2017, 2016, 2015, 2014]\r\n\r\n    return years.map((year, index) => (\r\n      <button\r\n        key={index}\r\n        className={`year ${curYear === year ? 'year-active' : ''}`}\r\n        onClick={this.onBtnClick}\r\n      >\r\n        {year}\r\n      </button>\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    const { year, photos } = this.props\r\n    return (\r\n      <div className=\"main__wrapper\">\r\n        <div className=\"years\">{this.renderButtons()}</div>\r\n        <p className=\"info\">\r\n          {year ? `${photos.length} фото за ${year} год` : `Выберите год`}\r\n        </p>\r\n        <div className=\"photos\">{this.renderPhotos()}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPage.propTypes = {\r\n  year: PropTypes.number.isRequired,\r\n  photos: PropTypes.array.isRequired,\r\n  getPhotos: PropTypes.func.isRequired,\r\n  error: PropTypes.string.isRequired,\r\n  isFetching: PropTypes.bool.isRequired,\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getPhotos } from '../actions/PageActions'\r\nimport Page from '../components/page/Page'\r\n\r\nclass PageContainer extends React.Component {\r\n  static mapStateToProps = store => {\r\n    return {\r\n      page: store.page,\r\n    }\r\n  }\r\n\r\n  static mapDispatchToProps = dispatch => {\r\n    return {\r\n      getPhotos: year => dispatch(getPhotos(year)),\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { page, getPhotos } = this.props\r\n    return (\r\n      <Page\r\n        year={page.year}\r\n        photos={page.photos}\r\n        getPhotos={getPhotos}\r\n        error={page.error}\r\n        isFetching={page.isFetching}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  PageContainer.mapStateToProps,\r\n  PageContainer.mapDispatchToProps\r\n)(PageContainer)\r\n","import React, { Component } from 'react'\r\nimport UserContainer from '../../containers/UserContainer'\r\nimport PageContainer from '../../containers/PageContainer'\r\n\r\nimport './App.scss'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <header className=\"app__header\">\r\n          <h1 className=\"app__title\">Топ фото</h1>\r\n          <UserContainer />\r\n        </header>\r\n        <main className=\"app__main\">\r\n          <PageContainer />\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/configureStore'\r\nimport App from './components/app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}